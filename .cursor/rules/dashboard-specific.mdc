---
globs: frontend/src/views/DashboardView.vue,frontend/src/components/layout/AppLayout.vue
description: Dashboard-specific implementation guidelines
---

# Dashboard Implementation Guidelines

## Layout Responsiveness
The dashboard must be fully responsive when the sidebar toggles between expanded and collapsed states.

### Sidebar States
- **Expanded**: 280px width, main content gets `calc(100vw - 280px)`
- **Collapsed**: 64px width, main content gets `calc(100vw - 64px)`
- **Mobile**: Sidebar becomes temporary overlay

### CSS Classes for Sidebar Detection
```css
/* Expanded sidebar */
.studybuddy-sidebar:not(.v-navigation-drawer--mini-variant) ~ .v-main

/* Collapsed sidebar */
.studybuddy-sidebar.v-navigation-drawer--mini-variant ~ .v-main
```

## Grid Responsiveness

### Stats Grid
- **Base**: `repeat(auto-fit, minmax(280px, 1fr))`
- **Collapsed Sidebar**: `repeat(auto-fit, minmax(200px, 1fr))`
- **Large Screens**: `repeat(auto-fit, minmax(180px, 1fr))`
- **Ultra-wide**: `repeat(auto-fit, minmax(160px, 1fr))`

### Projects Grid
- **Base**: `repeat(auto-fill, minmax(300px, 1fr))`
- **Collapsed Sidebar**: `repeat(auto-fill, minmax(250px, 1fr))`
- **Large Screens**: `repeat(auto-fill, minmax(220px, 1fr))`
- **Ultra-wide**: `repeat(auto-fill, minmax(200px, 1fr))`

## Container Structure
```vue
<template>
  <AppLayout>
    <div class="dashboard-container">
      <!-- Welcome Section -->
      <div class="welcome-section">...</div>
      
      <!-- Stats Grid -->
      <div class="stats-grid">...</div>
      
      <!-- Projects Section -->
      <div class="projects-section">
        <div class="projects-grid">...</div>
      </div>
    </div>
  </AppLayout>
</template>
```

## CSS Requirements
- Use `width: 100%` and `max-width: 100%` for all containers
- Use `box-sizing: border-box` for proper sizing
- Use `overflow-x: hidden` to prevent horizontal scrolling
- Use `flex: 1` for elements that should fill available space
- Use smooth transitions: `transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1)`

## Mobile Responsiveness
- Single column layout on mobile devices
- Reduced padding and margins
- Touch-friendly button sizes
- Optimized typography for small screens

## Performance Considerations
- Use CSS Grid for efficient layout calculations
- Minimize reflows and repaints
- Use `will-change` property sparingly
- Optimize images and assets